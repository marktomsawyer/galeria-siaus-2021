import * as React from "react";
import { SearchkitComponent, PaginationAccessor, SearchkitComponentProps } from "../../../../core";
export declare function generatePages(currentPage: any, totalPages: any, options: any): any[];
export interface PaginationDisplayProps {
    currentPage: number;
    totalPages: number;
    showNumbers?: boolean;
    pageScope?: number;
    bemBlocks: any;
    urlBuilder: (number) => string;
    translate: (string) => string;
    setPage: (number) => void;
}
export declare class PaginationDisplay extends React.Component<PaginationDisplayProps, any> {
    static propTypes: {
        currentPage: React.Validator<any>;
        totalPages: React.Validator<any>;
        urlBuilder: React.Validator<any>;
        showNumbers: React.Requireable<any>;
        pageScope: React.Requireable<any>;
        setPage: React.Requireable<any>;
    };
    static defaultProps: {
        showNumbers: boolean;
        pageScope: number;
    };
    isDisabled(pageNumber: number): boolean;
    getPages(): any[];
    render(): JSX.Element;
    renderEllipsis(key: any): JSX.Element;
    renderPaginationElement(pageNumber: number, cssClass: string, text?: string): JSX.Element;
}
export interface PaginationProps extends SearchkitComponentProps {
    showNumbers?: boolean;
    pageScope?: number;
}
export declare class Pagination extends SearchkitComponent<PaginationProps, any> {
    accessor: PaginationAccessor;
    static translations: any;
    translations: any;
    static propTypes: any;
    defineAccessor(): PaginationAccessor;
    defineBEMBlocks(): {
        container: string;
        option: string;
    };
    getCurrentPage(): number;
    getTotalPages(): number;
    isDisabled(pageNumber: number): boolean;
    setPage(pageNumber: number): void;
    render(): JSX.Element;
}
