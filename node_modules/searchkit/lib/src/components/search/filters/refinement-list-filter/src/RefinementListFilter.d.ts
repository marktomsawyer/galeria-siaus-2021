import * as React from "react";
import { SearchkitComponent, FacetAccessor, ISizeOption, SearchkitComponentProps, ReactComponentType, ArrayState } from "../../../../../core";
import { FilterCheckboxItemComponent, FilterItemComponentProps } from "../../filter-item/src/FilterItem";
export interface RefinementListFilterDisplayProps {
    id: string;
    title: string;
    hasOptions: boolean;
    state: ArrayState;
    toggleFilter: (string) => void;
    translate: Function;
    bemBlocks: any;
    buckets: Array<any>;
    moreSizeOption: any;
    toggleViewMoreOption: Function;
    itemComponent: ReactComponentType<FilterItemComponentProps>;
}
export declare class RefinementListFilterDisplay extends React.Component<RefinementListFilterDisplayProps, any> {
    static defaultProps: {
        itemComponent: typeof FilterCheckboxItemComponent;
    };
    hasOptions(): boolean;
    render(): JSX.Element;
    renderOption(option: any): React.ReactElement<any>;
    renderShowMore(): JSX.Element;
}
export interface RefinementListFilterProps extends SearchkitComponentProps {
    field: string;
    operator?: string;
    size?: number;
    title: string;
    id: string;
    component?: ReactComponentType<RefinementListFilterDisplayProps>;
    itemComponent?: ReactComponentType<FilterItemComponentProps>;
    orderKey?: string;
    orderDirection?: string;
}
export declare class RefinementListFilter extends SearchkitComponent<RefinementListFilterProps, any> {
    accessor: FacetAccessor;
    static propTypes: any;
    static defaultProps: {
        component: typeof RefinementListFilterDisplay;
        itemComponent: typeof FilterCheckboxItemComponent;
    };
    defineAccessor(): FacetAccessor;
    defineBEMBlocks(): {
        container: string;
        option: string;
    };
    toggleFilter(key: any): void;
    toggleViewMoreOption(option: ISizeOption): void;
    render(): React.ReactElement<any>;
}
